# Generated by Django 5.1.6 on 2025-03-29 12:21

import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('vendor', 'Vendor'), ('picker', 'Picker'), ('student_picker', 'Student Picker')], max_length=20)),
                ('profile_pic', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='profile_pics/')),
                ('state', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('institution', models.CharField(max_length=100)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=100)),
                ('business_category', models.CharField(choices=[('food', 'Food'), ('fashion', 'Fashion'), ('technology', 'Technology'), ('accessories', 'Accessories'), ('home', 'Home'), ('books', 'Books'), ('electronics', 'Electronics'), ('others', 'Others')], max_length=20)),
                ('specific_category', models.CharField(blank=True, choices=[('laundry', 'Laundry Services'), ('note_writing', 'Note Writing'), ('assignment_help', 'Assignment Help'), ('barbing', 'Barbing Services'), ('hair_styling', 'Hair Styling'), ('printing', 'Printing Services'), ('computer_repairs', 'Computer Repairs'), ('phone_repairs', 'Phone Repairs'), ('tutoring', 'Tutoring'), ('photography', 'Photography'), ('graphic_design', 'Graphic Design'), ('tailoring', 'Tailoring'), ('cleaning', 'Cleaning Services'), ('event_planning', 'Event Planning')], max_length=30, null=True)),
                ('shop_image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='shop_images/')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_ratings', models.IntegerField(default=0)),
                ('is_verified', models.BooleanField(default=False)),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=10)),
                ('account_name', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentPicker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostel_name', models.CharField(max_length=100)),
                ('room_number', models.CharField(max_length=20)),
                ('is_available', models.BooleanField(default=True)),
                ('total_deliveries', models.IntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=10)),
                ('account_name', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_picker_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matric_number', models.CharField(blank=True, max_length=20)),
                ('department', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Picker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fleet_type', models.CharField(choices=[('bike', 'Bike'), ('bicycle', 'Bicycle')], max_length=10)),
                ('is_available', models.BooleanField(default=True)),
                ('total_deliveries', models.IntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=10)),
                ('account_name', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='picker_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
